■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

Ｑ１

「chapter04」パッケージを作る。

「Calculation」クラスを作成し、tasu()を作る。
処理内容：２つのint型の引数を受け取り、加算して結果をreturnする。

「Main_Q1_5」クラスを作り、main()でtasu()を呼んで画面に出力。

ーーーーーーーーーーーーーーーーーーーーーーーー

[実行結果]

２ + ３ = ５

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

Ｑ２

Ｑ１のCalculationクラスにhiku()を作る。
処理内容：２つのint型の引数を受け取り、減算して結果をreturnする。

Mainクラスのmain()で２つの整数を入力してもらい、hiku()を呼んで画面に出力。

ーーーーーーーーーーーーーーーーーーーーーーーー

[実行結果]

１つめの整数を入力して下さい
５
２つめの整数を入力して下さい
３
５ - ３ = ２

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

Ｑ３

Ｑ１のCalculationクラスにevenNumberJudge()を作る。
処理内容：１つのint型の引数を受け取り、偶数ならtrue、奇数ならfalseをreturnする。

「Main_Q1_5」クラスのmain()で１つの整数を入力してもらい、
evenNumberJudge()を呼んで評価がtrueなら「偶数です」falseなら「奇数です」と出力

ーーーーーーーーーーーーーーーーーーーーーーーー

[実行結果]

１つの整数を入力して下さい
６
偶数です


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

Ｑ４

Ｑ１のCalculationクラスにfindNumber()を作る。
処理内容：１つのint型の引数を受け取り、１～100乱数を100回発生させ引数と一致すれば、
	  「　〇回目に〇〇を発見！ループを止めます　」と表示させ、
	  ループを中断させてtrueをreturnする。一致しなかったらfalseをreturnする。

「Main_Q1_5」クラスのmain()で100までの整数を１つ入力してもらい、
findNumber()を呼んで評価がtrueなら「見つかりました」falseなら「見つかりませんでした」と表示

ーーーーーーーーーーーーーーーーーーーーーーーー

[実行結果]（見つかった時）

１つの２桁の整数を入力してください
50
92回目に50を発見！ループを止めます
見つかりました


[実行結果]（見つからなかった時）

１つの２桁の整数を入力してください
50
見つかりませんでした


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

Ｑ５

Ｑ１のCalculationクラスにarrayGeneration()を作る。
処理内容：１つのint型の引数を受け取り、その引数を用いて配列を生成。
　　　　　配列の要素数分繰り返しを行い、1～100の乱数を入れ、その配列をreturnする。

「Main_Q1_5」クラスのmain()で１つの整数を入力してもらい、
arrayGeneration()を呼び、評価された配列を受け取り、
拡張for文で表示


[実行結果]

配列の要素数を入力して下さい
4
配列の中身は・・・
28
5
53
8


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

